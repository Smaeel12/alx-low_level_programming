#include <stdio.h>

/* _______3-calc.h________ */
typedef struct op
{
    char *op;
    int (*f)(int a, int b);
} op_t;
/*__________________________*/

/* _______3-op_functions.c________ */
int op_add(int a, int b)
{
        return (a + b);
}

int op_sub(int a, int b)
{
        return (a - b);
}

int op_mul(int a, int b)
{
        return (a * b);
}

int op_div(int a, int b)
{
        return (a / b);
}

int op_mod(int a, int b)
{
        return (a % b);
}
/*__________________________*/


/* _______3-get_op_func.c________ */
int (*get_op_func(char *s))(int, int)
{
      int i;
      op_t ops[] = {
        {"+", op_add},
        {"-", op_sub},
        {"*", op_mul},
        {"/", op_div},
        {"%", op_mod},
        {NULL, NULL}
      };
    
      while (ops[i].op != NULL)
      {
        if (ops[i].op == s)
          return(ops[i].f);
      }
      return (ops[i].f);
}
/*__________________________*/


/* _______3-main.c________ */
int main(int argc, char *argv)
{
  int num1 = atoi(argv[1]);
  int num2 = atoi(argv[3]);
  char operator = argv[2];
  
  if (argc != 4)
  {
    printf("Error\n");
    exit (98);
  }
  else if (operator == NULL)
  {
    printf("Error\n");
    exit (99);
  }
  else if (operator = "/" || operator = "%") && num2 = 0)
  {
    printf("Error\n");
    exit (100)
  }
  
  get_op_func(operator))(num1, num2);

}
/*__________________________*/

